--2022-07-30--------------------------------------------------------------------
Added lexer rule for SPUFI command...

--#SET TERMINATOR character

...by request to assist in processing SQL intended to be executed via SPUFI.

This rule works in concert with added SQL_STATEMENT_TERMINATOR rule to allow
the dynamic alteration of the SQL statement terminator from its default of
a semicolon.

Note that due to national characters (@, #, and $) being in the regex for the
SQLIDENTIFIER token, the character set as the SQL_STATEMENT_TERMINATOR must be
preceded by whitespace or it may be recognized instead as part of an 
SQLIDENTIFIER.  So...

--#SET TERMINATOR @
GRANT SELECT ON UMBRELLA_ACADEMY TO BEN@

...may cause problems as the @ will be slurped up as part of the SQLIDENTIFIER
grantee, where...

--#SET TERMINATOR @
GRANT SELECT ON UMBRELLA_ACADEMY TO NUMBER5 @

...will work just fine due to the whitespace before the @.

--2022-07-29--------------------------------------------------------------------
Modified createTableInClause rule to allow for requested syntax...

CREATE TABLE [...]
(NOT? VOLATILE)? IN (databaseName DOT)? tablespaceName (NOT? VOLATILE)?

...which is not documented as far back as DB2 9, and I could not locate 
documentation for versions of DB2 prior to that.  So I'm presuming this is
old syntax, old enough that IBM no longer documents it, but not so old that
IBM doesn't allow for it.  Sort of like the SEP parameter of the JCL DD
statement.

Added testdata/sql_createTableCustomVolatile and 
testdata/sql_createTableCustomVolatile1 to test both this, and an error in the
DB2zSQLParser.g4 grammar reported by the same nice folks in the same rule.  I
had erroneously left out the DOT between the optional databaseName and the
tablespaceName.  Corrected testdata/sql_createTable to test this.

--2022-06-02--------------------------------------------------------------------
Added scalar functions

AI_ANALOGY
AI_SEMANTIC_CLUSTER
AI_SIMILARITY

...and their syntax to DB2zSQLLexer.g4 and DB2zSQLParser.g4.

Added testdata/sql_aiFunction to test these.

