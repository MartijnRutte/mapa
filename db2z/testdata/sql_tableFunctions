SELECT * FROM TABLE (DSNADM.ADMIN_TASK_LIST()) AS A;
SELECT * FROM TABLE (DSNADM.ADMIN_TASK_OUTPUT('ZAPHOD', 4)) AS A;
SELECT * FROM TABLE (DSNADM.ADMIN_TASK_STATUS()) AS A;
SELECT * FROM TABLE (DSNADM.ADMIN_TASK_STATUS(8)) AS A;
SELECT * FROM TABLE (DSNADM.ADMIN_TASK_STATUS(NULL)) AS A;
SELECT * FROM TABLE (SYSIBMADM.BLOCKING_THREADS('ARTHUR,DENT')) AS A;

SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL()) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL(1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL('TRILLIAN')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL('TRILLIAN','FORD.PREFECT')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL('TRILLIAN','FORD.PREFECT',1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL(:NB-MSG)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL(:MQPOLICY)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL(:MQPOLICY,:MQSERVICE)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALL(:MQPOLICY,:MQSERVICE,:NB-MSG)) AS Q
WHERE  Q.CORRELID = :WS-CORRELID;

SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB()) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB(1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB('TRILLIAN')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB('TRILLIAN','FORD.PREFECT')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB('TRILLIAN','FORD.PREFECT',1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB(:NB-MSG)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB(:MQPOLICY)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB(:MQPOLICY,:MQSERVICE)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQREADALLCLOB(:MQPOLICY,:MQSERVICE,:NB-MSG)) AS Q
WHERE  Q.CORRELID = :WS-CORRELID;

SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL()) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL(1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL('TRILLIAN')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL('TRILLIAN','FORD.PREFECT')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL('TRILLIAN','FORD.PREFECT',1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL(:NB-MSG)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL(:MQPOLICY)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL(:MQPOLICY,:MQSERVICE)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALL(:MQPOLICY,:MQSERVICE,:NB-MSG)) AS Q
WHERE  Q.CORRELID = :WS-CORRELID;

SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB()) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB(1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB('TRILLIAN')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB('TRILLIAN','FORD.PREFECT')) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB('TRILLIAN','FORD.PREFECT',1)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB(:NB-MSG)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB(:MQPOLICY)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB(:MQPOLICY,:MQSERVICE)) AS Q;
SELECT Q.MSGID, Q.CORRELID, Q.MSG FROM TABLE (DB2MQ.MQRECEIVEALLCLOB(:MQPOLICY,:MQSERVICE,:NB-MSG)) AS Q
WHERE  Q.CORRELID = :WS-CORRELID;

SELECT
    U."PO ID"
  , U."Part #"
  , U."Product Name"
  , U."# Ordered"
  , U."Price"
  , U."Order Date"
FROM
    PURCHASE_ORDER P
  , XMLTABLE(
        XMLNAMESPACES('http://example.com' AS "pod")
      , '$po/PurchaseOrder/itemlist/item' PASSING P.PORDER as "po"
        COLUMNS "PO ID"         INTEGER       PATH '../../@POid',
                "Part #"        CHAR(6)       PATH 'product/@pid',
                "Product Name"  CHAR(50)      PATH 'product/pod:name',
                "# Ordered"     INTEGER       PATH 'quantity',
                "Price"         DECIMAL(9,2)  PATH 'product/pod:price',
                "Order Date"    TIMESTAMP     PATH '../../dateTime'
    ) AS U
WHERE P.STATUS = 'OUTSTANDING'
;

