SELECT WEEK(RUN_DATE) AS WEEK, 
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK, 
         RUN_PERSON, CPU_TIME CPU_USED 
    FROM JOBS_RUN 
    WHERE WEEK(RUN_DATE) = 13;

SELECT WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         RUN_PERSON, SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    WHERE WEEK(RUN_DATE) = 13
    GROUP BY WEEK(RUN_DATE), DAYOFWEEK(RUN_DATE), RUN_PERSON
    ORDER BY WEEK, DAY_WEEK, RUN_PERSON;

SELECT WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         RUN_PERSON, SUM(CPU_TIME) AS CUMULATIVE_CPU
   FROM JOBS_RUN 
   WHERE WEEK(RUN_DATE) = 13
   GROUP BY GROUPING SETS ((WEEK(RUN_DATE), RUN_PERSON),
                           (DAYOFWEEK(RUN_DATE), RUN_PERSON))
   ORDER BY WEEK, DAY_WEEK, RUN_PERSON;

SELECT WEEK(RUN_DATE) AS WEEK,
        DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
        RUN_PERSON, SUM(CPU_TIME) AS CUMULATIVE_CPU
  FROM JOBS_RUN
  WHERE WEEK(RUN_DATE) = 13
  GROUP BY ROLLUP (WEEK(RUN_DATE), DAYOFWEEK(RUN_DATE), RUN_PERSON)
  ORDER BY WEEK, DAY_WEEK, RUN_PERSON;

SELECT WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         RUN_PERSON, SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    WHERE WEEK(RUN_DATE) = 13
    GROUP BY CUBE ( WEEK(RUN_DATE), DAYOFWEEK(RUN_DATE), RUN_PERSON )
    ORDER BY WEEK, DAY_WEEK, RUN_PERSON;

SELECT RUN_PERSON,
         MONTH(RUN_DATE) AS MONTH,
         SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    GROUP BY GROUPING SETS ((RUN_PERSON, MONTH(RUN_DATE)),
                            ()
                            )
    ORDER BY RUN_PERSON, MONTH;

SELECT WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    GROUP BY ROLLUP (WEEK(RUN_DATE), DAYOFWEEK(RUN_DATE))
    ORDER BY WEEK, DAY_WEEK;

SELECT MONTH(RUN_DATE) AS MONTH,
         REGION,
         SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    GROUP BY ROLLUP (MONTH(RUN_DATE), REGION)
    ORDER BY MONTH, REGION;

SELECT WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         MONTH(RUN_DATE) AS MONTH,
         REGION,
         SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN
    GROUP BY GROUPING SETS (ROLLUP(WEEK(RUN_DATE), 
                             DAYOFWEEK(RUN_DATE)),
                            ROLLUP(MONTH(RUN_DATE), REGION))
    ORDER BY WEEK, DAY_WEEK, MONTH, REGION;

SELECT R1,R2 
    FROM (SELECT 'GROUP 1' as R1, 'GROUP 2' as R2
          FROM SYSIBM.SYSDUMMY1) AS X(R1,R2);

SELECT R1, R2, WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         MONTH(RUN_DATE) AS MONTH,
         REGION,
         CPU_TIME CPU_USED
   FROM JOBS_RUN, (SELECT 'GROUP 1' as R1, 'GROUP 2' as R2
          FROM SYSIBM.SYSDUMMY1) AS X(R1,R2);

SELECT R1, R2, 
         WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         MONTH(RUN_DATE) AS MONTH,
         REGION, SUM(CPU_TIME) AS CUMULATIVE_CPU
  FROM JOBS_RUN, (SELECT 'GROUP 1' as R1, 'GROUP 2' as R2
               FROM SYSIBM.SYSDUMMY1) AS X(R1,R2)
  GROUP BY GROUPING SETS ((R1, ROLLUP(WEEK(RUN_DATE),
                            DAYOFWEEK(RUN_DATE))),
                          (R2,ROLLUP(MONTH(RUN_DATE), REGION)))
  ORDER BY WEEK, DAY_WEEK, MONTH, REGION;

SELECT COALESCE(R1,R2) AS GROUP,
         WEEK(RUN_DATE) AS WEEK,
         DAYOFWEEK(RUN_DATE) AS DAY_WEEK,
         MONTH(RUN_DATE) AS MONTH,
         REGION, SUM(CPU_TIME) AS CUMULATIVE_CPU
    FROM JOBS_RUN, (SELECT 'GROUP 1' as R1, 'GROUP 2' as R2
          FROM SYSIBM.SYSDUMMY1) AS X(R1,R2)
    GROUP BY GROUPING SETS ((R1, ROLLUP(WEEK(RUN_DATE),
                              DAYOFWEEK(RUN_DATE))),
                          (R2, ROLLUP(MONTH(RUN_DATE), 
                               REGION)))
    ORDER BY GROUP, WEEK, DAY_WEEK, MONTH, REGION;

SELECT MONTH(RUN_DATE) AS MONTH,
         REGION,
         SUM(CPU_TIME) AS CUMULATIVE_CPU, 
         MAX(CPU_TIME) AS MOST_CPU, 
         CAST(ROUND(AVG(DECIMAL(CPU_TIME)),2) AS DECIMAL(5,2)) 
          AS AVG_UNITS_SOLD 
    FROM JOBS_RUN 
    GROUP BY CUBE(MONTH(RUN_DATE),REGION)
    ORDER BY MONTH, REGION;

SELECT
    SUBSTR(C1,1,1)
  , MIN(C2)
  , MAX(C2)
FROM D1.T1
GROUP BY SUBSTR(C1,1,1)
;

SELECT C1, AVG(C2) AS AVG_C2
   FROM D1.T1
   GROUP BY C1
   HAVING COUNT(*) > 1
   ORDER BY C1
;


