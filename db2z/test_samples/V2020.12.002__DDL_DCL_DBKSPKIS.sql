SET CURRENT SQLID = DBKE01;
SET SCHEMA DBKE01;
-- OPHALEN KLANTAFSPRAKEN BIJ KIS
--
DROP PROCEDURE DBKSPKIS;
COMMIT;
--
--#SET TERMINATOR @
--#SET SQLFORMAT SQLPL
CREATE PROCEDURE DBKSPKIS
    VERSION V2
     LANGUAGE SQL
     DYNAMIC RESULT SETS 1
     PARAMETER CCSID EBCDIC
     NOT DETERMINISTIC
     CALLED ON NULL INPUT
     MODIFIES SQL DATA
     DISABLE DEBUG MODE
     ASUTIME LIMIT 50000
     INHERIT SPECIAL REGISTERS
     COMMIT ON RETURN NO
     QUALIFIER DBKE01
     PACKAGE OWNER DBKE
     NODEFER PREPARE
     CURRENT DATA NO
     DEGREE 1
     DYNAMICRULES RUN
     WITH EXPLAIN
     WITHOUT IMMEDIATE WRITE
     ISOLATION LEVEL CS
     WITHOUT KEEP DYNAMIC
     SQL PATH KISE01, DBKE01
     RELEASE AT COMMIT
     REOPT NONE
     VALIDATE BIND
     ROUNDING DEC_ROUND_HALF_EVEN
     DECIMAL(31)

BEGIN
    DECLARE SQLCODE INTEGER DEFAULT 0;
    DECLARE RESULTSETKIS RESULT_SET_LOCATOR VARYING;
    DECLARE RESULTSETKIS2 RESULT_SET_LOCATOR VARYING;
    DECLARE RELFISCAALNR CHAR(9);
    DECLARE VGNCD VARCHAR(8);
    DECLARE VGNNR VARCHAR(35);
    DECLARE INDAANGTIJDVCD VARCHAR(8);
    DECLARE INDINGDAT DATE;
    DECLARE INDEINDDAT DATE;
    DECLARE SQLSTATE CHAR(5) DEFAULT '00000';
    DECLARE KID BIGINT;
    DECLARE KAID BIGINT;
    DECLARE VID BIGINT;
    DECLARE PID BIGINT;
    SELECT ID INTO PID FROM PROCES WHERE PROCESNAAM='DAA';

-- We legen eerst de te vullen tabellen.
        DELETE FROM KLANTAFSP_VERG;
        DELETE FROM VERGUNNING;
        DELETE FROM KLANTAFSPRAAK;
        DELETE FROM KLANT;

        DECLARE GLOBAL TEMPORARY TABLE SESSION.TEMP_AFSPRAKEN (
	    FISCNR CHAR(35) NOT NULL,
	    VGN_TYPE VARCHAR(35) NOT NULL,
	    VGN_NUMMER VARCHAR(35) NOT NULL,
	    PERIODICITEIT VARCHAR(8) NOT NULL,
	    INGANGSDATUM DATE NOT NULL,
	    EINDDATUM DATE WITH DEFAULT '9999-12-31'
	    ) NOT LOGGED ON COMMIT PRESERVE ROWS ;

CALL KISSPDBK ;
ASSOCIATE LOCATOR(RESULTSETKIS) WITH PROCEDURE KISSPDBK;
ALLOCATE C1 CURSOR FOR RESULT SET RESULTSETKIS;
-- Doe een eerste fetch om te kijken of de set leeg is.
-- (SQLSTATE is dan '020000')
FETCH C1 INTO RELFISCAALNR, VGNCD,
    VGNNR, INDAANGTIJDVCD, INDINGDAT, INDEINDDAT;
-- Loop through result set
WHILE (SQLSTATE = '00000') DO
			INSERT INTO SESSION.TEMP_AFSPRAKEN
			(FISCNR
		 	,VGN_TYPE
		 	,VGN_NUMMER
		 	,PERIODICITEIT
		 	,INGANGSDATUM
		 	,EINDDATUM
			)
			VALUES
            (LPAD(TRIM(RELFISCAALNR), 9, '0')
			, TRIM(VGNCD)
			, TRIM(VGNNR)
			, TRIM(INDAANGTIJDVCD)
			, INDINGDAT
			, INDEINDDAT
			);
FETCH C1 INTO RELFISCAALNR, VGNCD,
    VGNNR, INDAANGTIJDVCD, INDINGDAT, INDEINDDAT;
END WHILE;
CLOSE C1;

-- Klant --
MERGE INTO KLANT AS target
USING (SELECT DISTINCT 'RSIN'
      ,TRIM(FISCNR) FROM SESSION.TEMP_AFSPRAKEN)
    AS merge (KLANTTYPE, KLANTWAARDE)
ON target.KLANTTYPE = merge.KLANTTYPE
    AND target.KLANTWAARDE = merge.KLANTWAARDE
WHEN NOT MATCHED THEN
    INSERT (KLANTTYPE, KLANTWAARDE)
    VALUES (merge.KLANTTYPE, merge.KLANTWAARDE);

-- Nu vullen we de rest. --
CALL KISSPDBK;
ASSOCIATE LOCATOR (RESULTSETKIS2) WITH PROCEDURE KISSPDBK;
ALLOCATE C2 CURSOR FOR RESULT SET RESULTSETKIS2;
-- Doe een eerste fetch om te kijken of de set leeg is.
-- (SQLSTATE is dan '020000')
FETCH C2 INTO RELFISCAALNR, VGNCD,
    VGNNR, INDAANGTIJDVCD, INDINGDAT, INDEINDDAT;
-- Loop through result set
WHILE (SQLSTATE = '00000')
    DO
        -- Vul vergunning --
        INSERT INTO VERGUNNING (VERGUNNINGTYPE, VERGUNNINGNUMMER)
        VALUES (TRIM(VGNCD), TRIM(VGNNR));
        SET VID = IDENTITY_VAL_LOCAL(); -- Sla het gegenereerde ID op --
        -- Vul Klantafspraak --
        SELECT ID INTO KID FROM KLANT
        WHERE KLANTWAARDE = LPAD(TRIM(RELFISCAALNR), 9, '0');
        INSERT INTO KLANTAFSPRAAK (KLANTID, PROCESID, INGANGSDATUM,
                                   EINDDATUM, PERIODICITEITCODE)
        VALUES (KID, PID, INDINGDAT,
                INDEINDDAT, TRIM(INDAANGTIJDVCD));
        SET KAID = IDENTITY_VAL_LOCAL();  -- Sla het gegenereerde ID op --
        -- Koppel Klantafspraak aan vergunning --
        INSERT INTO KLANTAFSP_VERG (KLANTAFSPRAAKID, VERGUNNINGID)
        VALUES (KAID, VID);
        FETCH C2 INTO RELFISCAALNR, VGNCD,
            VGNNR, INDAANGTIJDVCD, INDINGDAT, INDEINDDAT;
    END WHILE;
CLOSE C2;
COMMIT;
DROP TABLE SESSION.TEMP_AFSPRAKEN;
END @
--#SET TERMINATOR ;
COMMIT;

GRANT EXECUTE ON PROCEDURE DBKSPKIS TO $EDBK00;
COMMIT;

